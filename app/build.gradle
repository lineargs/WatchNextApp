apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        config {
            if (rootProject.file('keystore.properties').exists()) {
                def props = new Properties()
                props.load(new FileInputStream(rootProject.file('keystore.properties')))

                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
            }
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.lineargs.watchnext"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField 'String', 'MOVIE_DATABASE_API_KEY', TMDbApiKey
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    bundle {
        language {
            enableSplit = true
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }
}

dependencies {
    /* Support Library developer.android.com/topic/libraries/support-library/revisions.html */
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacySupportV4Version"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.preference:preference:$rootProject.preferenceVersion"
    implementation "androidx.vectordrawable:vectordrawable:$rootProject.vectorVersion"
    implementation "androidx.cardview:cardview:$rootProject.cardViewVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    /* Room Persistence Library https://developer.android.com/topic/libraries/architecture/adding-components#room*/
    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    annotationProcessor "androidx.room:room-compiler:$rootProject.roomVersion"
    /* Lifecycle https://developer.android.com/topic/libraries/architecture/adding-components#lifecycle*/
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"
    /* WorkManager https://developer.android.com/jetpack/androidx/releases/work#declaring_dependencies*/
    implementation "androidx.work:work-runtime:$rootProject.workVersion"
    /* We use this import for Material Preference theme */
    implementation "androidx.legacy:legacy-preference-v14:$rootProject.legacyPreferenceV14Version"
    /* Firebase firebase.google.com/docs/android/setup#available_libraries*/
    implementation "com.google.firebase:firebase-crash:$rootProject.firebaseCrashVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseCoreVersion"
    implementation "com.google.firebase:firebase-messaging:$rootProject.firebaseMessagingVersion"
    /* github.com/firebase/firebase-jobdispatcher-android/blob/master/README.md */
    implementation "com.firebase:firebase-jobdispatcher:$rootProject.firebaseJobVersion"
    /* Crashlytics docs.fabric.io/android/changelog.html */
    implementation("com.crashlytics.sdk.android:crashlytics:$rootProject.fabricVersion@aar") {
        transitive = true
    }
    /* Butterknife github.com/JakeWharton/butterknife/blob/master/CHANGELOG.md */
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    /* Retrofit github.com/square/retrofit/blob/master/CHANGELOG.md */
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    /* Picasso github.com/square/picasso/blob/master/CHANGELOG.md */
    implementation "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    /* Testing only dependencies */
    androidTestImplementation "androidx.room:room-testing:$rootProject.roomVersion"
    androidTestImplementation "androidx.work:work-testing:$rootProject.workVersion"

    // Local unit tests
    testImplementation "junit:junit:$rootProject.junitVersion"

    // Instrumentation tests
    /* Espresso developer.android.com/topic/libraries/testing-support-library/release-notes.html*/
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.espressoVersion"
}

apply plugin: 'com.google.gms.google-services'